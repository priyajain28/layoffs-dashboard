# -*- coding: utf-8 -*-
"""LayoffsAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CFFBTsAdLl9yNSeTJaNr3NFPcs34tVUA
"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import streamlit as st



# Load dataset
df = pd.read_csv('Layoffs.fyi  - Tech Layoffs Tracker.csv')

# Preprocessing
df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
df['Year'] = df['Date'].dt.year
df['Month'] = df['Date'].dt.to_period('M').astype(str)
df['# Laid Off'] = pd.to_numeric(df['# Laid Off'], errors='coerce')
df['%'] = df['%'].str.replace('%', '').astype(float)
df_clean = df.dropna(subset=['# Laid Off'])

# Chart 1: Top Companies by Layoffs Year-wise

st.markdown("### üìä Chart 1: Top 10 Companies by Total Layoffs (Year-wise)\n\nThis bar chart highlights the top 10 companies with the highest number of layoffs in each year. It helps identify which organizations contributed most to tech layoffs over time. The grouping by year provides a comparative perspective across time periods.")

top_companies_yearly = (
    df_clean.groupby(['Year', 'Company'])['# Laid Off'].sum().reset_index()
)
top_10_per_year = top_companies_yearly.sort_values(['Year', '# Laid Off'], ascending=[True, False]).groupby('Year').head(10)
fig1 = px.bar(top_10_per_year, x='Company', y='# Laid Off', color='Year',
              title="Top 10 Companies by Total Layoffs (Year-wise)", text='# Laid Off',
              barmode='group', facet_col="Year", facet_col_wrap=2)
fig1.update_traces(textposition='outside')
st.plotly_chart(fig1)

# Chart 2: Monthly Layoff Trends

st.markdown("### üìà Chart 2: Monthly Layoff Trends by Year\n\nThis line graph tracks the total number of layoffs month-by-month, separated by year. It reveals patterns such as seasonal spikes or declines, and shows how different years compare in terms of monthly layoff activity.")

monthly = df_clean.groupby(['Year', 'Month'])['# Laid Off'].sum().reset_index()
fig2 = px.line(monthly, x='Month', y='# Laid Off', color='Year',
               title="Monthly Layoff Trends by Year", markers=True)
st.plotly_chart(fig2)

# Chart 3: Layoffs by Industry Year-wise

st.markdown("### üè≠ Chart 3: Top Industries by Total Layoffs (Year-wise)\n\nThis grouped bar chart visualizes layoffs aggregated by industry across years. It identifies which industries‚Äîlike FinTech, Retail, or SaaS‚Äîwere most affected, and how each industry's layoff trends evolved over time.")

industry_year = df_clean.groupby(['Year', 'Industry'])['# Laid Off'].sum().reset_index()
top_industries = industry_year.groupby('Industry')['# Laid Off'].sum().nlargest(10).index
filtered_industry_year = industry_year[industry_year['Industry'].isin(top_industries)]
fig3 = px.bar(
    filtered_industry_year,
    x='Industry',
    y='# Laid Off',
    color='Year',
    title="Top Industries by Total Layoffs (Year-wise)",
    barmode='group'
)
st.plotly_chart(fig3)

# Chart 4: Layoffs by Country Year-wise

st.markdown("### üåç Chart 4: Top Countries by Total Layoffs (Year-wise)\n\nThis visualization breaks down the layoffs by country for each year. It helps identify which countries experienced the most layoffs, pointing to possible regional economic or tech-sector-specific issues.")

country_year = df_clean.groupby(['Year', 'Country'])['# Laid Off'].sum().reset_index()
top_countries = country_year.groupby('Country')['# Laid Off'].sum().nlargest(10).index
filtered_country_year = country_year[country_year['Country'].isin(top_countries)]
fig4 = px.bar(
    filtered_country_year,
    x='Country',
    y='# Laid Off',
    color='Year',
    title="Top Countries by Total Layoffs (Year-wise)",
    barmode='group'
)
st.plotly_chart(fig4)

# Chart 5: Yearly Layoff Trend

st.markdown("### üìÖ Chart 5: Year-wise Total Layoffs\n\nA high-level overview of total layoffs per year. This chart is useful for observing macro-level trends and pinpointing years of significant job loss in the tech sector.")

yearly = df_clean.groupby('Year')['# Laid Off'].sum().reset_index()
fig5 = px.bar(yearly, x='Year', y='# Laid Off', title="Year-wise Total Layoffs", text='# Laid Off')
fig5.update_traces(textposition='outside')
st.plotly_chart(fig5)

# Chart 6: Heatmap of Layoffs by Industry and Year

st.markdown("### üî• Chart 6: Heatmap ‚Äì Layoffs by Industry & Year\n\nThe heatmap visualizes the intensity of layoffs across industries and years. Darker shades represent higher numbers of layoffs. This format quickly highlights which industries were hit hardest in specific years.")

heat_data = df_clean.groupby(['Industry', 'Year'])['# Laid Off'].sum().reset_index()
fig6 = px.density_heatmap(heat_data, x='Year', y='Industry', z='# Laid Off',
                          title="Heatmap: Layoffs by Industry & Year", color_continuous_scale='Reds')
st.plotly_chart(fig6)

# Chart 7: Top 10 Recent Layoff Events

st.markdown("### ‚è±Ô∏è Chart 7: 10 Most Recent Layoff Events\n\nThis chart displays the most recent layoff announcements in the dataset, providing insight into current layoff trends. The bar chart includes metadata like industry, location, and company stage for context.")

recent = df_clean.sort_values(by='Date', ascending=False).head(10)
fig7 = px.bar(recent, x='Company', y='# Laid Off', color='Year',
               title="10 Most Recent Layoffs", text='# Laid Off',
               hover_data=['Date', 'Location HQ', 'Stage'])
fig7.update_traces(textposition='outside')
st.plotly_chart(fig7)
